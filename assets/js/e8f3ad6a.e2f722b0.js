"use strict";(self.webpackChunkswdr_5_docs=self.webpackChunkswdr_5_docs||[]).push([[3089],{7747:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"Requirements/FunctionalRequirements/Reputation system/index","title":"Reputation System","description":"The reputation system is a new mechanic designed to partially replace the complaint system and complex and difficult to understand regulations with an automated or semi-automated mechanism for rewarding and penalizing simulator users. The fundamental assumption is to provide a tool that is attractive enough to users to encourage them to interact with the TrainDriver 2 simulator environment in a manner that is maximally consistent with the authors\' intentions:","source":"@site/docs/Requirements/03-FunctionalRequirements/06-Reputation system/index.mdx","sourceDirName":"Requirements/03-FunctionalRequirements/06-Reputation system","slug":"/Requirements/FunctionalRequirements/Reputation system/","permalink":"/integrator-docs/docs/Requirements/FunctionalRequirements/Reputation system/","draft":false,"unlisted":false,"editUrl":"https://github.com/ttsk-ngo/integrator-docs/tree/main/docs/Requirements/03-FunctionalRequirements/06-Reputation system/index.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"requirementsSidebar","previous":{"title":"CS-graph01 - System Skarg","permalink":"/integrator-docs/docs/Requirements/FunctionalRequirements/Complaint system/CS-graph01"},"next":{"title":"RS-FR0001 - Global View","permalink":"/integrator-docs/docs/Requirements/FunctionalRequirements/Reputation system/RS-FR0001"}}');var s=n(4848),a=n(8453);const r={},o="Reputation System",u={},m=[];function c(e){const t={h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"reputation-system",children:"Reputation System"})}),"\n",(0,s.jsx)(t.p,{children:"The reputation system is a new mechanic designed to partially replace the complaint system and complex and difficult to understand regulations with an automated or semi-automated mechanism for rewarding and penalizing simulator users. The fundamental assumption is to provide a tool that is attractive enough to users to encourage them to interact with the TrainDriver 2 simulator environment in a manner that is maximally consistent with the authors' intentions:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"with respect for other users"}),"\n",(0,s.jsx)(t.li,{children:"in accordance with railway regulations"}),"\n",(0,s.jsx)(t.li,{children:"in accordance with the spirit of the simulation"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"On the other hand, the tool should minimize negative, malicious, or gameplay-spoiling behavior, while at the same time forgiving minor errors and slips."})]})}function l(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var i=n(6540);const s={},a=i.createContext(s);function r(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);