"use strict";(self.webpackChunkswdr_5_docs=self.webpackChunkswdr_5_docs||[]).push([[1348],{324:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>g,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var i=o(4848),t=o(8453);const r={},s="Logging",l={id:"Design/Main concepts/Logging",title:"Logging",description:"Application logs following data:",source:"@site/docs/Design/01-Main concepts/Logging.mdx",sourceDirName:"Design/01-Main concepts",slug:"/Design/Main concepts/Logging",permalink:"/integrator-docs/pl/docs/Design/Main concepts/Logging",draft:!1,unlisted:!1,editUrl:"https://github.com/ttsk-ngo/integrator-docs/tree/main/docs/Design/01-Main concepts/Logging.mdx",tags:[],version:"current",frontMatter:{},sidebar:"designSidebar",previous:{title:"Correlation ID",permalink:"/integrator-docs/pl/docs/Design/Main concepts/CorrelationId"},next:{title:"User roles",permalink:"/integrator-docs/pl/docs/Design/Main concepts/User roles"}},g={},c=[{value:"Core logger",id:"core-logger",level:2},{value:"Exception logger",id:"exception-logger",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"logging",children:"Logging"})}),"\n",(0,i.jsx)(n.p,{children:"Application logs following data:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Time of log entry"}),"\n",(0,i.jsx)(n.li,{children:"Logging level"}),"\n",(0,i.jsx)(n.li,{children:"correlation id"}),"\n",(0,i.jsx)(n.li,{children:"client IP"}),"\n",(0,i.jsx)(n.li,{children:"Namespace from where the log was made (context)"}),"\n",(0,i.jsx)(n.li,{children:"Log message"}),"\n",(0,i.jsx)(n.li,{children:"Exception message*"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"*Only in case of exception logging"}),"\n",(0,i.jsx)(n.h2,{id:"core-logger",children:"Core logger"}),"\n",(0,i.jsxs)(n.p,{children:["Core logger logs everything with a logging level equal to or higher than the one set in ",(0,i.jsx)(n.code,{children:"appsettings.json"}),". Core logger logs are stored in ",(0,i.jsx)(n.code,{children:"/Integrator.Api/Logs/Core"}),". Core logger does not log exception messages, which means that only the occurrence of an exception is logged, and the exception logger should be viewed for details."]}),"\n",(0,i.jsx)(n.h2,{id:"exception-logger",children:"Exception logger"}),"\n",(0,i.jsxs)(n.p,{children:["The Exception logger only logs messages with a logging level equal to or higher than \u201cerror\u201d, but it also logs exception messages. Exception logger logs are stored in ",(0,i.jsx)(n.code,{children:"/Integrator.Api/Logs/Exception"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var i=o(6540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);